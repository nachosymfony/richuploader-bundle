<script>
    $(function() {
        var prefix = '.nacholibre_' + '{{ name }}';
        var sortSelector = $( prefix +  " #sortable" );

        var form = sortSelector.parents('form');

        var messageSelector = $(prefix + ' .message');

        var multiple = $(prefix + '.main_sortable_images').attr('data-multiple') == '1';
        var entityClass = $(prefix + '.main_sortable_images').attr('data-entity');

        function showMessage() {
            messageSelector.addClass('visible');
        }

        //function appendImageToSelect(select, id) {
        //    select.append('<option value="'+id+'" selected="selected">'+id+'</option>');
        //}

        function addImageID(element, id) {
            var ids = element.val();

            if (ids) {
                var realIds = ids.split(',');
            } else {
                var realIds = [];
            }

            realIds.push(id);
            element.attr('value', realIds.join(','));
        }

        function refreshSelect() {
            sortSelector.each(function(index) {
                var parent = $(this).parents('.main_sortable_images');

                //var select = parent.find('select');
                //select.empty();

                var idsContainer = parent.find('.nacholibre_ids input');
                idsContainer.val('');

                $(this).find('.rich_image_thumb').each(function(index) {
                    var id = $(this).attr('data-id');

                    if (index == 0 && multiple) {
                        $(this).find('div.main').removeClass('hidden');
                        $(this).find('.make_main').addClass('hidden');
                    } else {
                        $(this).find('div.main').addClass('hidden');
                        $(this).find('.make_main').removeClass('hidden');
                    }

                    addImageID(idsContainer, id);
                    //appendImageToSelect(select, id);
                });
            });
        }

        refreshSelect();

        sortSelector.sortable({
            placeholder: "ui-state-highlight",
            update: function(event, ui) {
                showMessage();

                refreshSelect();
            },
            //revert: true,
        });

        sortSelector.disableSelection();

        $(document).on('click', prefix + ' .rich_image_thumb .delete', function() {
            var parentElement = $(this).parent();
            var id = parentElement.attr('data-id');
            $(this).parents('.main_sortable_images').find('select option[value='+id+']').remove();
            parentElement.remove();

            showMessage();

            refreshSelect();
        });

        $(document).on('click', prefix + ' .rich_image_thumb .make_main', function() {
            var element = $(this).parent().clone(true);
            $(this).parent().remove();

            sortSelector.prepend(element);

            showMessage();

            refreshSelect();
        });

        $(prefix + ' .selectImages').click(function() {
            $(this).parent().find('.imageUploader').click();
        });

        $(prefix + ' .imageUploader').on('change', function(e) {
            showMessage();

            var formData = new FormData();

            for (var i = 0; i < this.files.length; i++) {
                var file = this.files[i];
                formData.append('file_' + i, file, file.name);
            }

            //clear all images, because this is not multiple image upload and only one image is allowed
            if (!multiple) {
                $(prefix + '.main_sortable_images .nacholibre_ids input').val('');
                sortSelector.html('');
            }

            var loadingImages = $('<div class="rich_image_thumb loading"><img src="{{ asset("bundles/nacholibrerichuploader/img/loading.gif") }}" /></div>');

            sortSelector.append(loadingImages);
            sortSelector.sortable('refresh');

            var parentSelect = $(this).parents('.main_sortable_images').find('select');

            var idsContainer = $(this).parents('.main_sortable_images').find('.nacholibre_ids input');

            formData.set('entityClass', entityClass);

            var uploadErrorsContainer = $(prefix + ' .uploadErrors');
            uploadErrorsContainer.addClass('hidden');
            uploadErrorsContainer.html('');

            var filesToUpload = this.files.length;

            $.ajax({
                type: 'POST',
                url: '{{ path('nacholibre.rich_image.upload') }}',
                data: formData,
                cache: false,
                contentType: false,
                processData: false,
                success: function(data) {
                    data = $('<html />').html(data);

                    var filesWithErrors = data.find('span.file_with_errors').attr('data-num');

                    var errors = [];
                    data.find('.errors div').each(function(error, val) {
                        var error = $(this).text();
                        errors.push(error);
                    });

                    if (errors.length > 0) {
                        uploadErrorsContainer.removeClass('hidden');

                        uploadErrorsContainer.append('<div><b>'+filesWithErrors+' {{ 'not_uploaded_correctly' | trans }}:</b></div>');

                        var i = 1;
                        $(errors).each(function(index, val) {
                            uploadErrorsContainer.append('<div>{{ 'file' | trans }} '+i+': '+val+'</div>');
                        });
                    }

                    if (filesWithErrors == filesToUpload) {
                        $(prefix + ' .rich_image_thumb.loading').remove();
                        return;
                    }

                    var currentImagesCount = sortSelector.find('.rich_image_thumb').length;

                    //1 because loading box is added and it counts to 1
                    if (currentImagesCount <= 1 && multiple) {
                        data.find('div.main').removeClass('hidden');
                        data.find('.make_main').addClass('hidden');
                    } else {
                        data.find('div.main').addClass('hidden');
                        data.find('.make_main').removeClass('hidden');
                    }

                    showMessage();

                    sortSelector.append(data.html());
                    $(prefix + ' .rich_image_thumb.loading').remove();
                    sortSelector.sortable('refresh');

                    var ids = [];

                    data.find('.rich_image_thumb').each(function(index) {
                        var id = $(this).attr('data-id');

                        addImageID(idsContainer, id);
                        //appendImageToSelect(parentSelect, id);
                    });
                },
                error: function(data) {
                    console.log('rich image upload error');
                    console.log(data);
                }
            });
        });
    } );
</script>
